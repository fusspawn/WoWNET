-- Generated by CSharp.lua Compiler
local System = System
local WrapperDatabase
local ListNPCLocationInfo
local ListNodeLocationInfo
System.import(function (out)
  WrapperDatabase = Wrapper.Database
  ListNPCLocationInfo = System.List(WrapperDatabase.NPCLocationInfo)
  ListNodeLocationInfo = System.List(WrapperDatabase.NodeLocationInfo)
end)
System.namespace("Wrapper.Database", function (namespace)
  namespace.class("MapDataEntry", function (namespace)
    local RestoreFromJson, class, __ctor__
    __ctor__ = function (this)
      this.InnKeepers = ListNPCLocationInfo()
      this.MailBoxes = ListNPCLocationInfo()
      this.Auctioneers = ListNPCLocationInfo()
      this.FlightMaster = ListNPCLocationInfo()
      this.Vendors = ListNPCLocationInfo()
      this.Repair = ListNPCLocationInfo()
      this.Nodes = ListNodeLocationInfo()
    end
    RestoreFromJson = function (this, mapDataEntry)
      for _, node in System.each(mapDataEntry.Nodes) do
        local default = WrapperDatabase.NodeLocationInfo()
        default.X = node.X
        default.Y = node.Y
        default.Z = node.Z
        default.Name = node.Name
        default.NodeType = node.NodeType
        default.MapID = node.MapID
        default.ObjectId = node.ObjectId
        this.Nodes:Add(default)
      end

      for _, node in System.each(mapDataEntry.Repair) do
        local default = WrapperDatabase.NPCLocationInfo()
        default.X = node.X
        default.Y = node.Y
        default.Z = node.Z
        default.Name = node.Name
        default.NodeType = node.NodeType
        default.MapID = node.MapID
        default.ObjectId = node.ObjectId
        this.Repair:Add(default)
      end

      for _, node in System.each(mapDataEntry.Vendors) do
        local default = WrapperDatabase.NPCLocationInfo()
        default.X = node.X
        default.Y = node.Y
        default.Z = node.Z
        default.Name = node.Name
        default.NodeType = node.NodeType
        default.MapID = node.MapID
        default.ObjectId = node.ObjectId
        this.Vendors:Add(default)
      end

      for _, node in System.each(mapDataEntry.InnKeepers) do
        local default = WrapperDatabase.NPCLocationInfo()
        default.X = node.X
        default.Y = node.Y
        default.Z = node.Z
        default.Name = node.Name
        default.NodeType = node.NodeType
        default.MapID = node.MapID
        default.ObjectId = node.ObjectId
        this.InnKeepers:Add(default)
      end

      for _, node in System.each(mapDataEntry.FlightMaster) do
        local default = WrapperDatabase.NPCLocationInfo()
        default.X = node.X
        default.Y = node.Y
        default.Z = node.Z
        default.Name = node.Name
        default.NodeType = node.NodeType
        default.MapID = node.MapID
        default.ObjectId = node.ObjectId
        this.FlightMaster:Add(default)
      end


      for _, node in System.each(mapDataEntry.MailBoxes) do
        local default = WrapperDatabase.NPCLocationInfo()
        default.X = node.X
        default.Y = node.Y
        default.Z = node.Z
        default.Name = node.Name
        default.NodeType = node.NodeType
        default.MapID = node.MapID
        default.ObjectId = node.ObjectId
        this.MailBoxes:Add(default)
      end
    end
    class = {
      RestoreFromJson = RestoreFromJson,
      __ctor__ = __ctor__,
      __metadata__ = function (out)
        return {
          fields = {
            { "Auctioneers", 0x6, System.List(out.Wrapper.Database.NPCLocationInfo) },
            { "FlightMaster", 0x6, System.List(out.Wrapper.Database.NPCLocationInfo) },
            { "InnKeepers", 0x6, System.List(out.Wrapper.Database.NPCLocationInfo) },
            { "MailBoxes", 0x6, System.List(out.Wrapper.Database.NPCLocationInfo) },
            { "Nodes", 0x6, System.List(out.Wrapper.Database.NodeLocationInfo) },
            { "Repair", 0x6, System.List(out.Wrapper.Database.NPCLocationInfo) },
            { "Vendors", 0x6, System.List(out.Wrapper.Database.NPCLocationInfo) }
          },
          methods = {
            { "RestoreFromJson", 0x106, RestoreFromJson, class }
          },
          class = { 0x6 }
        }
      end
    }
    return class
  end)
end)
