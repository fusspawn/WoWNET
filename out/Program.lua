-- Generated by CSharp.lua Compiler
local System = System
local Wrapper
local WrapperAPI
local WrapperWoW
System.import(function (out)
  Wrapper = out.Wrapper
  WrapperAPI = Wrapper.API
  WrapperWoW = Wrapper.WoW
end)
System.namespace("Wrapper", function (namespace)
  namespace.class("Program", function (namespace)
    local Base, ThrowWowErrors, Main, static
    static = function (this)
      Base = Wrapper.DataLoggerBase()
    end
    ThrowWowErrors = false
    Main = function (args)
      __LB__.LoadScript("NavigatorNightly")
      __LB__.LoadScript("AntiAFK")
      __LB__.LoadScript("LibDrawNightly")
      Wrapper.StdUI.Init()
      WrapperAPI.LibJson.Init()

      System.Console.WriteLine("Pulsed OM")
      WrapperWoW.ObjectManager.getInstance():Pulse()

      System.Console.WriteLine("Pulsed OM Complete")
      C_Timer.NewTicker(0.1, function ()
        if not ThrowWowErrors then
          System.try(function ()
            WrapperWoW.ObjectManager.getInstance():Pulse()
            Base:Pulse()
            --Console.WriteLine("New Ticker");
          end, function (default)
            local E = default
            System.Console.WriteLine("Exception in mainBot Thread: " .. System.toString(E:getMessage()))
          end)
        else
          WrapperWoW.ObjectManager.getInstance():Pulse()
          Base:Pulse()
        end
      end)




      C_Timer.After(5, function ()
        if _G["BroBot"] == nil then
          System.Console.WriteLine("Wont load brobot cc's brobot disabled")
          return
        end

        System.Console.WriteLine("Attempting to Register C# CC")
        registerRawFighter(WrapperAPI.HunterCCTest(), "CHunter")
        System.Console.WriteLine("Has Registered Fighter")
        System.Console.WriteLine("Attempting to Register C# Behavior")
        registerBehavior(WrapperAPI.BroBotBehavior(), "BroBotBehavior")
        System.Console.WriteLine("Registered C# thing")
      end)
    end
    return {
      Main = Main,
      static = static,
      __metadata__ = function (out)
        return {
          fields = {
            { "Base", 0x9, out.Wrapper.BotBase },
            { "ThrowWowErrors", 0x9, System.Boolean }
          },
          methods = {
            { "Main", 0x10E, Main, System.Array(System.String) }
          },
          class = { 0x6 }
        }
      end
    }
  end)
end)
