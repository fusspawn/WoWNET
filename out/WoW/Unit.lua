-- Generated by CSharp.lua Compiler
local System = System
local WrapperWoW
System.import(function (out)
  WrapperWoW = Wrapper.WoW
end)
System.namespace("Wrapper.WoW", function (namespace)
  namespace.class("WoWUnit", function (namespace)
    local getFriend, getHostile, getNeutral, getIsCasting, getIsChanneling, Update, Target, __ctor__
    __ctor__ = function (this, _GUID)
      WrapperWoW.WoWGameObject.__ctor__(this, _GUID)
    end
    getFriend = function (this)
      return this.Reaction > 4
    end
    getHostile = function (this)
      return this.Reaction < 4
    end
    getNeutral = function (this)
      return this.Reaction == 4
    end
    getIsCasting = function (this)
      local CastID
      local TargetGUID
      local TimeLeft
      local NotInterruptable

      local _
      _, CastID, TargetGUID, TimeLeft, NotInterruptable =  __LB__.UnitCastingInfo(this.GUID)
      return not System.String.IsNullOrEmpty(CastID)
    end
    getIsChanneling = function (this)
      local CastID
      local TargetGUID
      local TimeLeft
      local NotInterruptable

      local _
      _, CastID, TargetGUID, TimeLeft, NotInterruptable =  __LB__.UnitChannelInfo(this.GUID)
      return not System.String.IsNullOrEmpty(CastID)
    end
    Update = function (this)
      this.Health = __LB__.UnitTagHandler(UnitHealth, this.GUID)
      this.HealthMax = __LB__.UnitTagHandler(UnitHealthMax, this.GUID)
      this.Reaction = __LB__.UnitTagHandler(UnitReaction, "player", this.GUID)
      this.Dead = __LB__.UnitTagHandler(UnitIsDeadOrGhost, this.GUID)
      this.TargetGUID =  __LB__.UnitTarget(this.GUID)

      if this.Name == "Unknown" then
        this.Name =  __LB__.ObjectName(this.GUID)
      end



      if WrapperWoW.ObjectManager.getInstance().Player ~= nil and WrapperWoW.Vector3.Distance(WrapperWoW.ObjectManager.getInstance().Player.Position, this.Position:__clone__()) < 50 then
        this.LineOfSight = not  (__LB__.Raycast(this.Position.X, this.Position.Y, this.Position.Z + 1.5, WrapperWoW.ObjectManager.getInstance().Player.Position.X, WrapperWoW.ObjectManager.getInstance().Player.Position.Y, WrapperWoW.ObjectManager.getInstance().Player.Position.Z + 1.5, 0x100010) ~= nil) and not  (__LB__.Raycast(this.Position.X, this.Position.Y, this.Position.Z + 2, WrapperWoW.ObjectManager.getInstance().Player.Position.X, WrapperWoW.ObjectManager.getInstance().Player.Position.Y, WrapperWoW.ObjectManager.getInstance().Player.Position.Z + 2, 0x100010) ~= nil)
      else
        this.LineOfSight = false
      end

      WrapperWoW.WoWGameObject.Update(this)
    end
    Target = function (this)
      __LB__.UnitTagHandler(TargetUnit, this.GUID)
    end
    return {
      base = function (out)
        return {
          out.Wrapper.WoW.WoWGameObject
        }
      end,
      Health = 0,
      HealthMax = 0,
      Level = 0,
      Reaction = 0,
      Dead = false,
      LineOfSight = false,
      getFriend = getFriend,
      getHostile = getHostile,
      getNeutral = getNeutral,
      getIsCasting = getIsCasting,
      getIsChanneling = getIsChanneling,
      Update = Update,
      Target = Target,
      __ctor__ = __ctor__,
      __metadata__ = function (out)
        return {
          fields = {
            { "Dead", 0x6, System.Boolean },
            { "Health", 0x6, System.Int32 },
            { "HealthMax", 0x6, System.Int32 },
            { "Level", 0x6, System.Int32 },
            { "LineOfSight", 0x6, System.Boolean },
            { "Reaction", 0x6, System.Int32 },
            { "TargetGUID", 0x6, System.String }
          },
          properties = {
            { "Friend", 0x206, System.Boolean, getFriend },
            { "Hostile", 0x206, System.Boolean, getHostile },
            { "IsCasting", 0x206, System.Boolean, getIsCasting },
            { "IsChanneling", 0x206, System.Boolean, getIsChanneling },
            { "Neutral", 0x206, System.Boolean, getNeutral }
          },
          methods = {
            { ".ctor", 0x106, nil, System.String },
            { "Target", 0x6, Target },
            { "Update", 0x6, Update }
          },
          class = { 0x6 }
        }
      end
    }
  end)
end)
